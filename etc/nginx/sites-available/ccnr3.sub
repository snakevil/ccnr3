location /n/app/ {
    internal;
}

location /n/db/ {
    internal;
}

location /n/gui/ {
    internal;
}

location /n/ {
    # /var/
    error_page 404 = @ccnr3;
    # 修正小说目录 URL 尾部缺失的 / 符号
    rewrite ^(/n)(/[^\.]+)$ $1/db$2;
    if (-d $document_root$uri) {
        rewrite ^(/n)/db(/.*[^/])$ $1$2/ permanent;
    }
    # /n/db/foo/1 -> /var/db/foo/1.xml
    rewrite ^(/n/db/.+/.+)$ $1.xml break;
    # /n/db/foo/ -> /var/db/foo/toc.xml
    rewrite ^(/n/db/.+)/$ $1/toc.xml break;
    # /n/UPSTREAM -> /var/db/-new?UPSTREAM
    rewrite ^(/n)/(https?:/.*)$ $1/db/-?-=$2 break;
    # /n/foo -> /var/gui/foo
    rewrite ^(/n)(/.*)$ $1/gui$2 break;

    types {
        text/html html;
        text/xml xml;
        text/xsl xslt;
    }

    gzip on;
    gzip_comp_level 4;
    gzip_min_length 256;
    gzip_types application/xml;
}

location @ccnr3 {
    set $lua_status 404;
    set $lua_assert "$request_method: $uri";
    if ($lua_assert = 'GET: /n/db/-') {
        set $lua_status 200;
    }
    if ($lua_assert ~ "^(GET|HEAD): /n/db/[^/]+/(toc|\d+|\-size)\.xml$") {
        set $lua_status 200;
    }
    if ($lua_status = 404) {
        return 404;
    }
    set $lua_status '';
    set $lua_assert '';

    set $lua_db '/n/db';
    rewrite ^/n/db(/.*)$ $1 break;

    resolver 8.8.8.8;
    lua_code_cache on;
    content_by_lua_file $document_root/n/app/libexec/app.lua;

    gzip on;
    gzip_comp_level 4;
    gzip_min_length 256;
    gzip_types application/xml;
}
